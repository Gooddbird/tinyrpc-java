// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_tinypb_server.proto

package com.iker.tinyrpc.proto;

/**
 * Protobuf service {@code QueryService}
 */
public  abstract class QueryService
    implements com.google.protobuf.Service {
  protected QueryService() {}

  public interface Interface {
    /**
     * <pre>
     * rpc method name
     * </pre>
     *
     * <code>rpc query_name(.queryNameReq) returns (.queryNameRes);</code>
     */
    public abstract void queryName(
        com.google.protobuf.RpcController controller,
        com.iker.tinyrpc.proto.queryNameReq request,
        com.google.protobuf.RpcCallback<com.iker.tinyrpc.proto.queryNameRes> done);

    /**
     * <pre>
     * rpc method name
     * </pre>
     *
     * <code>rpc query_age(.queryAgeReq) returns (.queryAgeRes);</code>
     */
    public abstract void queryAge(
        com.google.protobuf.RpcController controller,
        com.iker.tinyrpc.proto.queryAgeReq request,
        com.google.protobuf.RpcCallback<com.iker.tinyrpc.proto.queryAgeRes> done);

  }

  public static com.google.protobuf.Service newReflectiveService(
      final Interface impl) {
    return new QueryService() {
      @java.lang.Override
      public  void queryName(
          com.google.protobuf.RpcController controller,
          com.iker.tinyrpc.proto.queryNameReq request,
          com.google.protobuf.RpcCallback<com.iker.tinyrpc.proto.queryNameRes> done) {
        impl.queryName(controller, request, done);
      }

      @java.lang.Override
      public  void queryAge(
          com.google.protobuf.RpcController controller,
          com.iker.tinyrpc.proto.queryAgeReq request,
          com.google.protobuf.RpcCallback<com.iker.tinyrpc.proto.queryAgeRes> done) {
        impl.queryAge(controller, request, done);
      }

    };
  }

  public static com.google.protobuf.BlockingService
      newReflectiveBlockingService(final BlockingInterface impl) {
    return new com.google.protobuf.BlockingService() {
      public final com.google.protobuf.Descriptors.ServiceDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }

      public final com.google.protobuf.Message callBlockingMethod(
          com.google.protobuf.Descriptors.MethodDescriptor method,
          com.google.protobuf.RpcController controller,
          com.google.protobuf.Message request)
          throws com.google.protobuf.ServiceException {
        if (method.getService() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "Service.callBlockingMethod() given method descriptor for " +
            "wrong service type.");
        }
        switch(method.getIndex()) {
          case 0:
            return impl.queryName(controller, (com.iker.tinyrpc.proto.queryNameReq)request);
          case 1:
            return impl.queryAge(controller, (com.iker.tinyrpc.proto.queryAgeReq)request);
          default:
            throw new java.lang.AssertionError("Can't get here.");
        }
      }

      public final com.google.protobuf.Message
          getRequestPrototype(
          com.google.protobuf.Descriptors.MethodDescriptor method) {
        if (method.getService() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "Service.getRequestPrototype() given method " +
            "descriptor for wrong service type.");
        }
        switch(method.getIndex()) {
          case 0:
            return com.iker.tinyrpc.proto.queryNameReq.getDefaultInstance();
          case 1:
            return com.iker.tinyrpc.proto.queryAgeReq.getDefaultInstance();
          default:
            throw new java.lang.AssertionError("Can't get here.");
        }
      }

      public final com.google.protobuf.Message
          getResponsePrototype(
          com.google.protobuf.Descriptors.MethodDescriptor method) {
        if (method.getService() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "Service.getResponsePrototype() given method " +
            "descriptor for wrong service type.");
        }
        switch(method.getIndex()) {
          case 0:
            return com.iker.tinyrpc.proto.queryNameRes.getDefaultInstance();
          case 1:
            return com.iker.tinyrpc.proto.queryAgeRes.getDefaultInstance();
          default:
            throw new java.lang.AssertionError("Can't get here.");
        }
      }

    };
  }

  /**
   * <pre>
   * rpc method name
   * </pre>
   *
   * <code>rpc query_name(.queryNameReq) returns (.queryNameRes);</code>
   */
  public abstract void queryName(
      com.google.protobuf.RpcController controller,
      com.iker.tinyrpc.proto.queryNameReq request,
      com.google.protobuf.RpcCallback<com.iker.tinyrpc.proto.queryNameRes> done);

  /**
   * <pre>
   * rpc method name
   * </pre>
   *
   * <code>rpc query_age(.queryAgeReq) returns (.queryAgeRes);</code>
   */
  public abstract void queryAge(
      com.google.protobuf.RpcController controller,
      com.iker.tinyrpc.proto.queryAgeReq request,
      com.google.protobuf.RpcCallback<com.iker.tinyrpc.proto.queryAgeRes> done);

  public static final
      com.google.protobuf.Descriptors.ServiceDescriptor
      getDescriptor() {
    return com.iker.tinyrpc.proto.TestTinypbServer.getDescriptor().getServices().get(0);
  }
  public final com.google.protobuf.Descriptors.ServiceDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }

  public final void callMethod(
      com.google.protobuf.Descriptors.MethodDescriptor method,
      com.google.protobuf.RpcController controller,
      com.google.protobuf.Message request,
      com.google.protobuf.RpcCallback<
        com.google.protobuf.Message> done) {
    if (method.getService() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "Service.callMethod() given method descriptor for wrong " +
        "service type.");
    }
    switch(method.getIndex()) {
      case 0:
        this.queryName(controller, (com.iker.tinyrpc.proto.queryNameReq)request,
          com.google.protobuf.RpcUtil.<com.iker.tinyrpc.proto.queryNameRes>specializeCallback(
            done));
        return;
      case 1:
        this.queryAge(controller, (com.iker.tinyrpc.proto.queryAgeReq)request,
          com.google.protobuf.RpcUtil.<com.iker.tinyrpc.proto.queryAgeRes>specializeCallback(
            done));
        return;
      default:
        throw new java.lang.AssertionError("Can't get here.");
    }
  }

  public final com.google.protobuf.Message
      getRequestPrototype(
      com.google.protobuf.Descriptors.MethodDescriptor method) {
    if (method.getService() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "Service.getRequestPrototype() given method " +
        "descriptor for wrong service type.");
    }
    switch(method.getIndex()) {
      case 0:
        return com.iker.tinyrpc.proto.queryNameReq.getDefaultInstance();
      case 1:
        return com.iker.tinyrpc.proto.queryAgeReq.getDefaultInstance();
      default:
        throw new java.lang.AssertionError("Can't get here.");
    }
  }

  public final com.google.protobuf.Message
      getResponsePrototype(
      com.google.protobuf.Descriptors.MethodDescriptor method) {
    if (method.getService() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "Service.getResponsePrototype() given method " +
        "descriptor for wrong service type.");
    }
    switch(method.getIndex()) {
      case 0:
        return com.iker.tinyrpc.proto.queryNameRes.getDefaultInstance();
      case 1:
        return com.iker.tinyrpc.proto.queryAgeRes.getDefaultInstance();
      default:
        throw new java.lang.AssertionError("Can't get here.");
    }
  }

  public static Stub newStub(
      com.google.protobuf.RpcChannel channel) {
    return new Stub(channel);
  }

  public static final class Stub extends com.iker.tinyrpc.proto.QueryService implements Interface {
    private Stub(com.google.protobuf.RpcChannel channel) {
      this.channel = channel;
    }

    private final com.google.protobuf.RpcChannel channel;

    public com.google.protobuf.RpcChannel getChannel() {
      return channel;
    }

    public  void queryName(
        com.google.protobuf.RpcController controller,
        com.iker.tinyrpc.proto.queryNameReq request,
        com.google.protobuf.RpcCallback<com.iker.tinyrpc.proto.queryNameRes> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(0),
        controller,
        request,
        com.iker.tinyrpc.proto.queryNameRes.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.iker.tinyrpc.proto.queryNameRes.class,
          com.iker.tinyrpc.proto.queryNameRes.getDefaultInstance()));
    }

    public  void queryAge(
        com.google.protobuf.RpcController controller,
        com.iker.tinyrpc.proto.queryAgeReq request,
        com.google.protobuf.RpcCallback<com.iker.tinyrpc.proto.queryAgeRes> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(1),
        controller,
        request,
        com.iker.tinyrpc.proto.queryAgeRes.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          com.iker.tinyrpc.proto.queryAgeRes.class,
          com.iker.tinyrpc.proto.queryAgeRes.getDefaultInstance()));
    }
  }

  public static BlockingInterface newBlockingStub(
      com.google.protobuf.BlockingRpcChannel channel) {
    return new BlockingStub(channel);
  }

  public interface BlockingInterface {
    public com.iker.tinyrpc.proto.queryNameRes queryName(
        com.google.protobuf.RpcController controller,
        com.iker.tinyrpc.proto.queryNameReq request)
        throws com.google.protobuf.ServiceException;

    public com.iker.tinyrpc.proto.queryAgeRes queryAge(
        com.google.protobuf.RpcController controller,
        com.iker.tinyrpc.proto.queryAgeReq request)
        throws com.google.protobuf.ServiceException;
  }

  private static final class BlockingStub implements BlockingInterface {
    private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
      this.channel = channel;
    }

    private final com.google.protobuf.BlockingRpcChannel channel;

    public com.iker.tinyrpc.proto.queryNameRes queryName(
        com.google.protobuf.RpcController controller,
        com.iker.tinyrpc.proto.queryNameReq request)
        throws com.google.protobuf.ServiceException {
      return (com.iker.tinyrpc.proto.queryNameRes) channel.callBlockingMethod(
        getDescriptor().getMethods().get(0),
        controller,
        request,
        com.iker.tinyrpc.proto.queryNameRes.getDefaultInstance());
    }


    public com.iker.tinyrpc.proto.queryAgeRes queryAge(
        com.google.protobuf.RpcController controller,
        com.iker.tinyrpc.proto.queryAgeReq request)
        throws com.google.protobuf.ServiceException {
      return (com.iker.tinyrpc.proto.queryAgeRes) channel.callBlockingMethod(
        getDescriptor().getMethods().get(1),
        controller,
        request,
        com.iker.tinyrpc.proto.queryAgeRes.getDefaultInstance());
    }

  }

  // @@protoc_insertion_point(class_scope:QueryService)
}

